# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python App workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [ "synchronize, opened" ]
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' 
    - name: git checkout
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        ls -al
    - name: Python project init db
      run: |
        python db.py -a
        ls -al
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.6
      with:
        name: Database
        path: ./products.db
        
  test:
    needs: build
    runs-on: ubuntu-20.04
    steps:  
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8
      with: 
        name: Database
    - name: check files
      run: ls -al
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        echo 'run pytest here when developers write tests'
        
  deliver:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - name: Deliver
        run: echo 'delivery pipeline'
